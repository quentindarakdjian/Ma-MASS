install.packages('ggplot2', dep = TRUE)
suppressPackageStartupMessages(library(plyr))
suppressPackageStartupMessages(library("gplots"))
suppressPackageStartupMessages(library(data.table))

# Change working directory
locationToProcess = "C:/Users/Manu/MASS/EnergyPlusV8-2-4/results"
setwd(locationToProcess)


convertJoulesTokWh <- function(value, size){(value * 0.0000002778) / size}

# Change the column number to treat the heating and cooling demand
returnHeatingDemandFor = function(data, i) { data[[i]][[5]] }
returnCoolingDemandFor = function(data, i) { data[[i]][[6]] }

cumulativeMeanWithError = function(x) {
  n = length(x) # Get the length of the vector x
  y = numeric(n) # Transform n in a numeric value (y)
  z = c(1:n) 
  y = cumsum(x) # cumulative sum
  y = y / z
  l = numeric(n)
  r = numeric(n)
  for (i in 1:n) {
    xx <- splitAt(x, i)
    s <- sd(xx)
    error <- qnorm(0.975) * s / sqrt(i)
    l[i] <- y[i] - error
    r[i] <- y[i] + error
  }
  df = data.frame(y, l, r)
  return(df)
}

splitAt <- function(x, pos) {
  xx <- unname(split(x, cumsum(seq_along(x) %in% pos)))
  return(as.numeric(unlist(xx)))
}

officeSize = 60.9 # in mÂ²

#####
##### Monthly
#####

monthly <- list.files(pattern = "monthly.*[.]csv")
monthly <- lapply(monthly, read.csv)

monthlyDF <- data.frame("Jan" = NA,"Feb" = NA,"Mar" = NA,"Apr" = NA,"May" = NA,"Jun" = NA,
                        "Jul" = NA,"Aug" = NA,"Sep" = NA,"Oct" = NA,"Nov" = NA,"Dec" = NA)

for (i in 1:length(monthly)) {monthlyDF[i,] = lapply(returnHeatingDemandFor(monthly,i), 
                                                     convertJoulesTokWh,  size = officeSize)}

boxplot(monthlyDF, main = "Heating Demand", xlab = "", ylab = "Heating Demand(kWh/m2.y)",outline = FALSE, ylim = c(0,15))


#####
##### Yearly
#####

RunPeriodFiles = list.files(pattern = "runperiod.*[.]csv")
RunPeriod = lapply(RunPeriodFiles, read.csv)

heatingDemand <- data.frame()
CoolingDemand <- data.frame()

for (i in 1:length(RunPeriod)) {
  heatingDemand = rbind(heatingDemand, returnHeatingDemandFor(RunPeriod,i))
  CoolingDemand = rbind(CoolingDemand, returnCoolingDemandFor(RunPeriod,i))
}

heatingDemand = lapply(heatingDemand, convertJoulesTokWh,  size = officeSize)
CoolingDemand = lapply(CoolingDemand, convertJoulesTokWh,  size = officeSize)
heatingDemand = heatingDemand[[1]]
CoolingDemand = CoolingDemand[[1]]
medianHeatingDemand = median(heatingDemand)
medianCoolingDemand = median(CoolingDemand)

n = length(heatingDemand)
x = seq(1,n,1) # number of simulations
y = cumulativeMeanWithError(heatingDemand) # running mean heating demand

ma <- signif(max(y$r),3) # maximum value
mi <- signif(min(y$l),3) # minimum value

notes <- data.frame("heatingDemand" = NA, "coolingDemand" = NA)
notes$heatingDemand = medianHeatingDemand
notes$coolingDemand = medianCoolingDemand

textplot(notes)

h <- hist(heatingDemand, breaks = 10, col = "red", xlab = "", main = "Heating Demand")

h <- hist(CoolingDemand, breaks = 10, col = "red", xlab = "", main = "Cooling Demand")

boxplot(heatingDemand, main = "", xlab = "", ylab = "Heating Demand(kWh/m2.y)",outline = FALSE, ylim = c(0,100))

